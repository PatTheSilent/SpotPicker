#!/usr/bin/env python

import argparse
import logging
import os
from time import sleep

from SpotPicker.data_pipe import get_data, DataPusher, DataBackends
from SpotPicker.elasticsearch_handler import ElasticsearchHandler
from SpotPicker.influxdb_handler import InfluxDBHandler


def main(opts):

    level = logging.INFO

    if opts.verbose:
        level = logging.DEBUG

    logging.basicConfig(level=level)

    if opts.influxdb_host is not None:
        DataBackends.append(
            InfluxDBHandler(
                host=opts.influxdb_host,
                port=opts.influxdb_port,
                user=opts.influxdb_user,
                password=opts.influxdb_password,
                db=opts.influxdb_db
            )
        )

    if opts.influxdb_host is not None:
        DataBackends.append(
            ElasticsearchHandler(
                opts.elasticsearch_host,
                opts.elasticsearch_port,
                opts.elasticsearch_index
            )
        )
    while True:
        get_data()
        DataPusher().dequeue()
        sleep(10)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='test')
    parser.add_argument('--influxdb-host', default=os.getenv('INFLUXDB_HOST'))
    parser.add_argument('--elasticsearch-host', default=os.getenv('ELASTICSEARCH_HOST'))

    known_args, rem_args = parser.parse_known_args()

    # Arguments required if InfluxDB host is set
    if known_args.influxdb_host:
        parser.add_argument('--influxdb-port', type=int, default=os.getenv('INFLUXDB_PORT', 8086))
        parser.add_argument('--influxdb-db', default=os.getenv('INFLUXDB_DB'))
        parser.add_argument('--influxdb-user', default=os.getenv('INFLUXDB_USER'))
        parser.add_argument('--influxdb-password', default=os.getenv('INFLUXDB_USER_PASSWORD'))

    # Arguments required if Elasticsearch host is set
    if known_args.elasticsearch_host:
        parser.add_argument('--elasticsearch-port', type=int, default=os.getenv('ELASTICSEARCH_PORT', 9200))
        parser.add_argument('--elasticsearch-index', default=os.getenv('ELASTICSEARCH_INDEX'))

    parser.add_argument('--verbose', action='store_true')

    args = parser.parse_args()

    main(args)
